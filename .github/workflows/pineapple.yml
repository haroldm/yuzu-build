name: 'pineapple'
run-name: 'Check if there is a new pineapple release'

on:
  workflow_dispatch:
  schedule:
    - cron:  '15,45 * * * *'

jobs:
  a:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag of the latest pineapple release
        uses: actions/github-script@v6
        id: release_tag
        with:
          result-encoding: string
          script: |
            return await github.rest.repos.getLatestRelease({
              owner: 'pineappleEA',
              repo: 'pineapple-src',
            }).then(res => res.data.tag_name);

      - name: Download previousrelease tag
        uses: actions/cache/restore@v3
        with:
          key: pineapple-tag
          path: tag.txt
          fail-on-cache-miss: false

      - name: Handle previous and current release tags
        run : |
          echo "previous_tag=$(cat tag.txt)" >> "$GITHUB_ENV"
          echo "${{ steps.release_tag.outputs.result }}" > tag.txt

      - name: Trigger new build
        if: "${{ steps.release_tag.outputs.result }} !=  ${{ env.previous_tag }}"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |
            try {
              const result = await github.rest.actions.createWorkflowDispatch({
                owner: 'haroldm',
                repo: 'yuzu-build',
                workflow_id: 'patch.yml',
                ref: 'main',  
                inputs: {
                  tag: '${{ steps.release_tag.outputs.result }}'
                },
              })
              console.log(result);
            } catch(error) {
              console.error(error);
              core.setFailed(error);
            }
          
      - name: Delete cached release tag
        continue-on-error: true
        if: "${{ steps.release_tag.outputs.result }} !=  ${{ env.previous_tag }}"
        run: |
          gh extension install actions/gh-actions-cache
          REPO=${{ github.repository }}
          BRANCH=main
          cacheKey=pineapple-tag
          gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Cache release tag
        uses: actions/cache/save@v3
        if: "${{ steps.release_tag.outputs.result }} !=  ${{ env.previous_tag }}"
        with:
            path: tag.txt
            key: pineapple-tag
